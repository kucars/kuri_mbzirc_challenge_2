<?xml version="1.0"?>
<launch>
  <!-- Based on JSK launch file -->
  <arg name="paused" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="gui" default="true" />
  <arg name="headless" default="false"/>
  <arg name="enable_logging" default="false"/>
  <arg name="enable_ground_truth" default="true"/>
  
  <include file="$(find kuri_mbzirc_sim)/launch/mbzirc_arena_2.launch" >
    <arg name="paused" default="$(arg paused)"/>
    <arg name="debug" default="$(arg debug)"/>
    <arg name="gui" value="$(arg gui)" />
    <arg name="headless" default="$(arg headless)"/>
  </include>

  <arg name="laser_enabled" default="true"/>
  <arg name="ur5_enabled" default="false"/>
  <arg name="kinect_enabled" default="false"/>
  <arg name="gripper_enabled" default="false"/>
  
  <arg  name="robot_initial_pose" value="-x 65 -y -25 -z 0.1 -Y 3.14" />
  <include file="$(find husky_gazebo)/launch/spawn_husky.launch">
    <arg name="laser_enabled" value="$(arg laser_enabled)"/>
    <arg name="kinect_enabled" value="$(arg kinect_enabled)"/>
    <arg name="ur5_enabled" value="$(arg ur5_enabled)"/>
    <arg name="gripper_enabled" value="$(arg gripper_enabled)"/>
    <arg name="robot_initial_pose" value="$(arg robot_initial_pose)"/>
    <arg name="husky_gazebo_description" value="$(find kuri_mbzirc_sim)/urdf/husky_with_camera_laser.urdf.xacro"/>
  </include>
  
  <!-- Load UR5 controllers -->
  <rosparam command="load" file="$(find kuri_mbzirc_challenge_2)/config/control_ur5.yaml" />
  <node name="arm_controller_spawner" pkg="controller_manager" type="spawner" args="arm_controller --shutdown-timeout 3"/>
  
  <!-- Fake Calibration -->
  <node pkg="rostopic" type="rostopic" name="fake_joint_calibration" args="pub calibrated std_msgs/Bool true" />

  <!-- Stow the arm -->
  <node pkg="husky_control" type="stow_ur5" name="stow_ur5"/>
  <!--  <node pkg="husky_control" type="stow_ur5" name="stow_ur5"/> -->

  <!-- Start the pr2 gripper controller and action server -->
  <rosparam command="load" file="$(find husky_control)/config/control_gripper.yaml" />
  <node name="r_gripper_controller_spawner" pkg="controller_manager" type="spawner" args="r_gripper_controller"/>
  <!-- https://github.com/ros-controls/ros_controllers/pull/181 -->
  <node name="r_gripper_state_publisher" pkg="rostopic" type="rostopic"
        args="pub -r 1 /joint_states sensor_msgs/JointState
              '{name: [r_gripper_l_finger_tip_joint, r_gripper_motor_slider_joint, r_gripper_motor_screw_joint, r_gripper_r_finger_joint, r_gripper_r_finger_tip_joint,  r_gripper_joint],
              position: [0,0,0,0,0,0]}'" />

  <!-- moveit -->
  <include file="$(find husky_ur5_moveit_config)/launch/husky_ur5_planning_execution.launch">
    <arg name="sim" value="true"/>
    <arg name="limited" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
    <arg name="allow_sensor_manager" default="true" unless="$(arg headless)"/> <!-- nominal -->
    <arg name="allow_sensor_manager" default="false"    if="$(arg headless)"/> <!-- on travis -->
  </include>

  <group unless="$(arg headless)" >
    <node pkg="rviz" type="rviz" name="rviz" args="-d $(find kuri_mbzirc_challenge_2)/rviz/planning.rviz"/>
    <rosparam param="/husky_velocity_controller/linear/x/max_velocity">4.0</rosparam>
  </group>
  
  <!--- Run Move Base -->  
  <include file="$(find husky_navigation)/launch/move_base.launch">
    <arg name="no_static_map" value="true"/>
  </include>

</launch>

